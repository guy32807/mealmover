{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useQuery, useQueryClient } from 'react-query';\nimport axios from 'axios';\nimport config from '../config';\nconst fetchRestaurants = async ({\n  location,\n  filters\n}) => {\n  const {\n    lat,\n    lng\n  } = location;\n  const {\n    priceRange,\n    rating,\n    cuisines,\n    openNow,\n    keyword\n  } = filters;\n\n  // Build query parameters\n  const params = new URLSearchParams();\n  params.append('lat', lat);\n  params.append('lng', lng);\n  params.append('minPrice', priceRange[0]);\n  params.append('maxPrice', priceRange[1]);\n  params.append('rating', rating);\n  if (cuisines.length > 0) {\n    cuisines.forEach(cuisine => params.append('cuisine', cuisine));\n  }\n  if (openNow) {\n    params.append('openNow', true);\n  }\n  if (keyword) {\n    params.append('keyword', keyword);\n  }\n  const response = await axios.get(`${config.API_URL}/restaurants?${params.toString()}`);\n  return response.data;\n};\nexport const useRestaurants = (location, filters) => {\n  _s();\n  return useQuery(['restaurants', location, filters], () => fetchRestaurants({\n    location,\n    filters\n  }), {\n    enabled: !!location.lat && !!location.lng,\n    staleTime: 300000,\n    // 5 minutes\n    refetchOnWindowFocus: false,\n    retry: 1\n  });\n};\n_s(useRestaurants, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useRestaurantDetails = restaurantId => {\n  _s2();\n  return useQuery(['restaurant', restaurantId], async () => {\n    const response = await axios.get(`${config.API_URL}/restaurants/${restaurantId}`);\n    return response.data;\n  }, {\n    enabled: !!restaurantId,\n    staleTime: 600000 // 10 minutes\n  });\n};\n_s2(useRestaurantDetails, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useQuery","useQueryClient","axios","config","fetchRestaurants","location","filters","lat","lng","priceRange","rating","cuisines","openNow","keyword","params","URLSearchParams","append","length","forEach","cuisine","response","get","API_URL","toString","data","useRestaurants","_s","enabled","staleTime","refetchOnWindowFocus","retry","useRestaurantDetails","restaurantId","_s2"],"sources":["/Users/augustedubuisson/Library/CloudStorage/OneDrive-Personal/Portfolio/local-restaurant-finder/frontend/src/hooks/useRestaurants.js"],"sourcesContent":["import { useQuery, useQueryClient } from 'react-query';\nimport axios from 'axios';\nimport config from '../config';\n\nconst fetchRestaurants = async ({ location, filters }) => {\n  const { lat, lng } = location;\n  const { priceRange, rating, cuisines, openNow, keyword } = filters;\n  \n  // Build query parameters\n  const params = new URLSearchParams();\n  params.append('lat', lat);\n  params.append('lng', lng);\n  params.append('minPrice', priceRange[0]);\n  params.append('maxPrice', priceRange[1]);\n  params.append('rating', rating);\n  if (cuisines.length > 0) {\n    cuisines.forEach(cuisine => params.append('cuisine', cuisine));\n  }\n  if (openNow) {\n    params.append('openNow', true);\n  }\n  if (keyword) {\n    params.append('keyword', keyword);\n  }\n  \n  const response = await axios.get(`${config.API_URL}/restaurants?${params.toString()}`);\n  return response.data;\n};\n\nexport const useRestaurants = (location, filters) => {\n  return useQuery(\n    ['restaurants', location, filters],\n    () => fetchRestaurants({ location, filters }),\n    {\n      enabled: !!location.lat && !!location.lng,\n      staleTime: 300000, // 5 minutes\n      refetchOnWindowFocus: false,\n      retry: 1,\n    }\n  );\n};\n\nexport const useRestaurantDetails = (restaurantId) => {\n  return useQuery(\n    ['restaurant', restaurantId],\n    async () => {\n      const response = await axios.get(`${config.API_URL}/restaurants/${restaurantId}`);\n      return response.data;\n    },\n    {\n      enabled: !!restaurantId,\n      staleTime: 600000, // 10 minutes\n    }\n  );\n};"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,cAAc,QAAQ,aAAa;AACtD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,WAAW;AAE9B,MAAMC,gBAAgB,GAAG,MAAAA,CAAO;EAAEC,QAAQ;EAAEC;AAAQ,CAAC,KAAK;EACxD,MAAM;IAAEC,GAAG;IAAEC;EAAI,CAAC,GAAGH,QAAQ;EAC7B,MAAM;IAAEI,UAAU;IAAEC,MAAM;IAAEC,QAAQ;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAGP,OAAO;;EAElE;EACA,MAAMQ,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;EACpCD,MAAM,CAACE,MAAM,CAAC,KAAK,EAAET,GAAG,CAAC;EACzBO,MAAM,CAACE,MAAM,CAAC,KAAK,EAAER,GAAG,CAAC;EACzBM,MAAM,CAACE,MAAM,CAAC,UAAU,EAAEP,UAAU,CAAC,CAAC,CAAC,CAAC;EACxCK,MAAM,CAACE,MAAM,CAAC,UAAU,EAAEP,UAAU,CAAC,CAAC,CAAC,CAAC;EACxCK,MAAM,CAACE,MAAM,CAAC,QAAQ,EAAEN,MAAM,CAAC;EAC/B,IAAIC,QAAQ,CAACM,MAAM,GAAG,CAAC,EAAE;IACvBN,QAAQ,CAACO,OAAO,CAACC,OAAO,IAAIL,MAAM,CAACE,MAAM,CAAC,SAAS,EAAEG,OAAO,CAAC,CAAC;EAChE;EACA,IAAIP,OAAO,EAAE;IACXE,MAAM,CAACE,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC;EAChC;EACA,IAAIH,OAAO,EAAE;IACXC,MAAM,CAACE,MAAM,CAAC,SAAS,EAAEH,OAAO,CAAC;EACnC;EAEA,MAAMO,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAC,GAAGlB,MAAM,CAACmB,OAAO,gBAAgBR,MAAM,CAACS,QAAQ,CAAC,CAAC,EAAE,CAAC;EACtF,OAAOH,QAAQ,CAACI,IAAI;AACtB,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGA,CAACpB,QAAQ,EAAEC,OAAO,KAAK;EAAAoB,EAAA;EACnD,OAAO1B,QAAQ,CACb,CAAC,aAAa,EAAEK,QAAQ,EAAEC,OAAO,CAAC,EAClC,MAAMF,gBAAgB,CAAC;IAAEC,QAAQ;IAAEC;EAAQ,CAAC,CAAC,EAC7C;IACEqB,OAAO,EAAE,CAAC,CAACtB,QAAQ,CAACE,GAAG,IAAI,CAAC,CAACF,QAAQ,CAACG,GAAG;IACzCoB,SAAS,EAAE,MAAM;IAAE;IACnBC,oBAAoB,EAAE,KAAK;IAC3BC,KAAK,EAAE;EACT,CACF,CAAC;AACH,CAAC;AAACJ,EAAA,CAXWD,cAAc;EAAA,QAClBzB,QAAQ;AAAA;AAYjB,OAAO,MAAM+B,oBAAoB,GAAIC,YAAY,IAAK;EAAAC,GAAA;EACpD,OAAOjC,QAAQ,CACb,CAAC,YAAY,EAAEgC,YAAY,CAAC,EAC5B,YAAY;IACV,MAAMZ,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAC,GAAGlB,MAAM,CAACmB,OAAO,gBAAgBU,YAAY,EAAE,CAAC;IACjF,OAAOZ,QAAQ,CAACI,IAAI;EACtB,CAAC,EACD;IACEG,OAAO,EAAE,CAAC,CAACK,YAAY;IACvBJ,SAAS,EAAE,MAAM,CAAE;EACrB,CACF,CAAC;AACH,CAAC;AAACK,GAAA,CAZWF,oBAAoB;EAAA,QACxB/B,QAAQ;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}