{"ast":null,"code":"var _jsxFileName = \"/Users/augustedubuisson/Library/CloudStorage/OneDrive-Personal/Portfolio/local-restaurant-finder/frontend/src/components/MapView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './MapView.css'; // Create this file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapView = ({\n  restaurants = []\n}) => {\n  _s();\n  const [useGoogleMaps, setUseGoogleMaps] = useState(false);\n\n  // Function to toggle between placeholder and Google Maps\n  const toggleMapView = () => {\n    setUseGoogleMaps(!useGoogleMaps);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: useGoogleMaps ?\n    /*#__PURE__*/\n    // This would be your actual Google Maps component\n    _jsxDEV(\"div\", {\n      className: \"google-maps-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-placeholder\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Google Maps would display here with \", restaurants.length, \" markers\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleMapView,\n          children: \"Show Placeholder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this) :\n    /*#__PURE__*/\n    // Enhanced placeholder with styling\n    _jsxDEV(\"div\", {\n      className: \"map-placeholder\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"placeholder-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Restaurant Map\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [restaurants.length, \" restaurants found in your area\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"placeholder-markers\",\n          children: restaurants.slice(0, 3).map(restaurant => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"placeholder-marker\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"marker-pin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"marker-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: restaurant.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: restaurant.cuisine\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 37\n            }, this)]\n          }, restaurant.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleMapView,\n          children: \"Try Google Maps\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_s(MapView, \"/O8u0NqGzTJHIZMgpmYWC0G30WY=\");\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MapView","restaurants","_s","useGoogleMaps","setUseGoogleMaps","toggleMapView","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","onClick","slice","map","restaurant","name","cuisine","id","_c","$RefreshReg$"],"sources":["/Users/augustedubuisson/Library/CloudStorage/OneDrive-Personal/Portfolio/local-restaurant-finder/frontend/src/components/MapView.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './MapView.css'; // Create this file for styling\n\nconst MapView = ({ restaurants = [] }) => {\n    const [useGoogleMaps, setUseGoogleMaps] = useState(false);\n    \n    // Function to toggle between placeholder and Google Maps\n    const toggleMapView = () => {\n        setUseGoogleMaps(!useGoogleMaps);\n    };\n    \n    return (\n        <div className=\"map-container\">\n            {useGoogleMaps ? (\n                // This would be your actual Google Maps component\n                <div className=\"google-maps-wrapper\">\n                    {/* Replace this with your Google Maps component when API key is fixed */}\n                    <div className=\"map-placeholder\">\n                        <p>Google Maps would display here with {restaurants.length} markers</p>\n                        <button onClick={toggleMapView}>Show Placeholder</button>\n                    </div>\n                </div>\n            ) : (\n                // Enhanced placeholder with styling\n                <div className=\"map-placeholder\">\n                    <div className=\"placeholder-content\">\n                        <h3>Restaurant Map</h3>\n                        <p>{restaurants.length} restaurants found in your area</p>\n                        <div className=\"placeholder-markers\">\n                            {restaurants.slice(0, 3).map(restaurant => (\n                                <div key={restaurant.id} className=\"placeholder-marker\">\n                                    <div className=\"marker-pin\"></div>\n                                    <div className=\"marker-info\">\n                                        <strong>{restaurant.name}</strong>\n                                        <span>{restaurant.cuisine}</span>\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                        <button onClick={toggleMapView}>Try Google Maps</button>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default MapView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}