{"ast":null,"code":"var _jsxFileName = \"/Users/augustedubuisson/Library/CloudStorage/OneDrive-Personal/Portfolio/local-restaurant-finder/frontend/src/components/LocationFinder.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, createElement as _createElement } from 'react';\nimport { FaLocationArrow, FaSearch } from 'react-icons/fa';\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport './LocationFinder.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LocationFinder = ({\n  onLocationChange\n}) => {\n  _s();\n  const [address, setAddress] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Use browser geolocation API to get current position\n  const getCurrentLocation = () => {\n    setLoading(true);\n    setError(null);\n    if (!navigator.geolocation) {\n      setError('Geolocation is not supported by your browser');\n      setLoading(false);\n      return;\n    }\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      onLocationChange({\n        lat: latitude,\n        lng: longitude\n      });\n      // Reverse geocoding to get address\n      fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`).then(response => response.json()).then(data => {\n        if (data.results && data.results.length > 0) {\n          setAddress(data.results[0].formatted_address);\n        }\n      }).catch(err => console.error('Error reverse geocoding:', err)).finally(() => setLoading(false));\n    }, err => {\n      setError(`Error getting location: ${err.message}`);\n      setLoading(false);\n    }, {\n      enableHighAccuracy: true,\n      timeout: 15000,\n      maximumAge: 10000\n    });\n  };\n  const handleSelect = async selectedAddress => {\n    setLoading(true);\n    try {\n      const results = await geocodeByAddress(selectedAddress);\n      const latLng = await getLatLng(results[0]);\n      setAddress(selectedAddress);\n      onLocationChange(latLng);\n    } catch (error) {\n      setError('Error finding that location');\n      console.error('Error selecting address:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"location-finder\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Find Restaurants Near You\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-controls\",\n      children: [/*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n        value: address,\n        onChange: setAddress,\n        onSelect: handleSelect,\n        children: ({\n          getInputProps,\n          suggestions,\n          getSuggestionItemProps,\n          loading: placesLoading\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"autocomplete-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ...getInputProps({\n                placeholder: 'Enter your location',\n                className: 'location-input'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: getCurrentLocation,\n              disabled: loading,\n              children: /*#__PURE__*/_jsxDEV(FaLocationArrow, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"autocomplete-dropdown-container\",\n            children: [placesLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"suggestion-item\",\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 35\n            }, this), suggestions.map((suggestion, index) => {\n              const className = suggestion.active ? 'suggestion-item active' : 'suggestion-item';\n              return /*#__PURE__*/_createElement(\"div\", {\n                ...getSuggestionItemProps(suggestion, {\n                  className\n                }),\n                key: index,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 21\n                }\n              }, /*#__PURE__*/_jsxDEV(\"span\", {\n                children: suggestion.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 23\n              }, this));\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: \"Finding location...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(LocationFinder, \"8EOS+Ifd6jW8xjFEyreSKepr5w0=\");\n_c = LocationFinder;\nexport default LocationFinder;\nvar _c;\n$RefreshReg$(_c, \"LocationFinder\");","map":{"version":3,"names":["React","useState","useEffect","createElement","_createElement","FaLocationArrow","FaSearch","geocodeByAddress","getLatLng","PlacesAutocomplete","jsxDEV","_jsxDEV","LocationFinder","onLocationChange","_s","address","setAddress","loading","setLoading","error","setError","getCurrentLocation","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","lat","lng","fetch","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","then","response","json","data","results","length","formatted_address","catch","err","console","finally","message","enableHighAccuracy","timeout","maximumAge","handleSelect","selectedAddress","latLng","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","onSelect","getInputProps","suggestions","getSuggestionItemProps","placesLoading","placeholder","onClick","disabled","map","suggestion","index","active","key","__self","__source","description","_c","$RefreshReg$"],"sources":["/Users/augustedubuisson/Library/CloudStorage/OneDrive-Personal/Portfolio/local-restaurant-finder/frontend/src/components/LocationFinder.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FaLocationArrow, FaSearch } from 'react-icons/fa';\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport './LocationFinder.css';\n\nconst LocationFinder = ({ onLocationChange }) => {\n  const [address, setAddress] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  \n  // Use browser geolocation API to get current position\n  const getCurrentLocation = () => {\n    setLoading(true);\n    setError(null);\n    \n    if (!navigator.geolocation) {\n      setError('Geolocation is not supported by your browser');\n      setLoading(false);\n      return;\n    }\n    \n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        const { latitude, longitude } = position.coords;\n        onLocationChange({ lat: latitude, lng: longitude });\n        // Reverse geocoding to get address\n        fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`)\n          .then(response => response.json())\n          .then(data => {\n            if (data.results && data.results.length > 0) {\n              setAddress(data.results[0].formatted_address);\n            }\n          })\n          .catch(err => console.error('Error reverse geocoding:', err))\n          .finally(() => setLoading(false));\n      },\n      (err) => {\n        setError(`Error getting location: ${err.message}`);\n        setLoading(false);\n      },\n      { enableHighAccuracy: true, timeout: 15000, maximumAge: 10000 }\n    );\n  };\n  \n  const handleSelect = async (selectedAddress) => {\n    setLoading(true);\n    try {\n      const results = await geocodeByAddress(selectedAddress);\n      const latLng = await getLatLng(results[0]);\n      setAddress(selectedAddress);\n      onLocationChange(latLng);\n    } catch (error) {\n      setError('Error finding that location');\n      console.error('Error selecting address:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  return (\n    <div className=\"location-finder\">\n      <h3>Find Restaurants Near You</h3>\n      <div className=\"location-controls\">\n        <PlacesAutocomplete\n          value={address}\n          onChange={setAddress}\n          onSelect={handleSelect}\n        >\n          {({ getInputProps, suggestions, getSuggestionItemProps, loading: placesLoading }) => (\n            <div className=\"autocomplete-container\">\n              <div className=\"input-wrapper\">\n                <input\n                  {...getInputProps({\n                    placeholder: 'Enter your location',\n                    className: 'location-input',\n                  })}\n                />\n                <button onClick={getCurrentLocation} disabled={loading}>\n                  <FaLocationArrow />\n                </button>\n              </div>\n              \n              <div className=\"autocomplete-dropdown-container\">\n                {placesLoading && <div className=\"suggestion-item\">Loading...</div>}\n                {suggestions.map((suggestion, index) => {\n                  const className = suggestion.active\n                    ? 'suggestion-item active'\n                    : 'suggestion-item';\n                  return (\n                    <div\n                      {...getSuggestionItemProps(suggestion, { className })}\n                      key={index}\n                    >\n                      <span>{suggestion.description}</span>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          )}\n        </PlacesAutocomplete>\n        \n        {error && <div className=\"error-message\">{error}</div>}\n        {loading && <div className=\"loading-indicator\">Finding location...</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default LocationFinder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}