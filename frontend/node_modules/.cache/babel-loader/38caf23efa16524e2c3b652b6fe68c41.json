{"ast":null,"code":"var _jsxFileName = \"/Users/augustedubuisson/Library/CloudStorage/OneDrive-Personal/Portfolio/local-restaurant-finder/frontend/src/components/RestaurantList.jsx\";\nimport React from 'react';\nimport RestaurantCard from './RestaurantCard';\nimport './RestaurantList.css'; // Assuming you have some CSS for styling\n\n// Accept restaurants as a prop instead of fetching it again\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RestaurantList = ({\n  restaurants = []\n}) => {\n  // No need for state or useEffect since data comes from props\n\n  if (!restaurants || restaurants.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No restaurants found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"restaurant-list\",\n    children: restaurants.map(restaurant => /*#__PURE__*/_jsxDEV(RestaurantCard, {\n      restaurant: {\n        ...restaurant,\n        id: restaurant.id.toString(),\n        location: restaurant.location || {\n          lat: restaurant.lat || 37.7749,\n          lng: restaurant.lng || -122.4194\n        }\n      }\n    }, restaurant.id.toString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_c = RestaurantList;\nexport default RestaurantList;\nvar _c;\n$RefreshReg$(_c, \"RestaurantList\");","map":{"version":3,"names":["React","RestaurantCard","jsxDEV","_jsxDEV","RestaurantList","restaurants","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","restaurant","id","toString","location","lat","lng","_c","$RefreshReg$"],"sources":["/Users/augustedubuisson/Library/CloudStorage/OneDrive-Personal/Portfolio/local-restaurant-finder/frontend/src/components/RestaurantList.jsx"],"sourcesContent":["import React from 'react';\nimport RestaurantCard from './RestaurantCard';\nimport './RestaurantList.css'; // Assuming you have some CSS for styling\n\n// Accept restaurants as a prop instead of fetching it again\nconst RestaurantList = ({ restaurants = [] }) => {\n    // No need for state or useEffect since data comes from props\n\n    if (!restaurants || restaurants.length === 0) {\n        return <div>No restaurants found.</div>;\n    }\n\n    return (\n        <div className=\"restaurant-list\">\n            {restaurants.map((restaurant) => (\n                <RestaurantCard \n                    key={restaurant.id.toString()} \n                    restaurant={{\n                        ...restaurant,\n                        id: restaurant.id.toString(),\n                        location: restaurant.location || {\n                            lat: restaurant.lat || 37.7749,\n                            lng: restaurant.lng || -122.4194\n                        }\n                    }} \n                />\n            ))}\n        </div>\n    );\n};\n\nexport default RestaurantList;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAO,sBAAsB,CAAC,CAAC;;AAE/B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAGA,CAAC;EAAEC,WAAW,GAAG;AAAG,CAAC,KAAK;EAC7C;;EAEA,IAAI,CAACA,WAAW,IAAIA,WAAW,CAACC,MAAM,KAAK,CAAC,EAAE;IAC1C,oBAAOH,OAAA;MAAAI,QAAA,EAAK;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC3C;EAEA,oBACIR,OAAA;IAAKS,SAAS,EAAC,iBAAiB;IAAAL,QAAA,EAC3BF,WAAW,CAACQ,GAAG,CAAEC,UAAU,iBACxBX,OAAA,CAACF,cAAc;MAEXa,UAAU,EAAE;QACR,GAAGA,UAAU;QACbC,EAAE,EAAED,UAAU,CAACC,EAAE,CAACC,QAAQ,CAAC,CAAC;QAC5BC,QAAQ,EAAEH,UAAU,CAACG,QAAQ,IAAI;UAC7BC,GAAG,EAAEJ,UAAU,CAACI,GAAG,IAAI,OAAO;UAC9BC,GAAG,EAAEL,UAAU,CAACK,GAAG,IAAI,CAAC;QAC5B;MACJ;IAAE,GARGL,UAAU,CAACC,EAAE,CAACC,QAAQ,CAAC,CAAC;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAShC,CACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACS,EAAA,GAxBIhB,cAAc;AA0BpB,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}