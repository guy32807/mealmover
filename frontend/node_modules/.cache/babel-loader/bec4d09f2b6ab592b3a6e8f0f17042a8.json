{"ast":null,"code":"var _jsxFileName = \"/Users/augustedubuisson/Library/CloudStorage/OneDrive-Personal/Portfolio/local-restaurant-finder/frontend/src/components/MapView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapView = ({\n  restaurants\n}) => {\n  _s();\n  const [mapCenter, setMapCenter] = useState({\n    lat: 0,\n    lng: 0\n  });\n  const apiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n  useEffect(() => {\n    if (restaurants.length > 0) {\n      const avgLat = latitudes.reduce((a, b) => a + b, 0) / latitudes.length;\n      const avgLng = longitudes.reduce((a, b) => a + b, 0) / longitudes.length;\n      setMapCenter({\n        lat: avgLat,\n        lng: avgLng\n      });\n    }\n  }, [restaurants]);\n  const mapContainerStyle = {\n    height: '400px',\n    width: '100%'\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: apiKey,\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      center: mapCenter,\n      zoom: 12,\n      children: restaurants.map(restaurant => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: restaurant.location.lat,\n          lng: restaurant.location.lng\n        },\n        title: restaurant.name\n      }, restaurant._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(MapView, \"3EJNNaSAMW2ggyvdZKeHVapvLsQ=\");\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","LoadScript","Marker","axios","jsxDEV","_jsxDEV","MapView","restaurants","_s","mapCenter","setMapCenter","lat","lng","apiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","API_URL","REACT_APP_API_URL","length","avgLat","latitudes","reduce","a","b","avgLng","longitudes","mapContainerStyle","height","width","googleMapsApiKey","children","center","zoom","map","restaurant","position","location","title","name","_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/augustedubuisson/Library/CloudStorage/OneDrive-Personal/Portfolio/local-restaurant-finder/frontend/src/components/MapView.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport axios from 'axios';\n\nconst MapView = ({ restaurants }) => {\n    const [mapCenter, setMapCenter] = useState({ lat: 0, lng: 0 });\n    const apiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n    const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n    useEffect(() => {\n        if (restaurants.length > 0) {\n            const avgLat = latitudes.reduce((a, b) => a + b, 0) / latitudes.length;\n            const avgLng = longitudes.reduce((a, b) => a + b, 0) / longitudes.length;\n            setMapCenter({ lat: avgLat, lng: avgLng });\n        }\n    }, [restaurants]);\n\n    const mapContainerStyle = {\n        height: '400px',\n        width: '100%',\n    };\n\n    return (\n        <LoadScript googleMapsApiKey={apiKey}>\n            <GoogleMap\n                mapContainerStyle={mapContainerStyle}\n                center={mapCenter}\n                zoom={12}\n            >\n                {restaurants.map((restaurant) => (\n                    <Marker\n                        key={restaurant._id}\n                        position={{\n                            lat: restaurant.location.lat,\n                            lng: restaurant.location.lng,\n                        }}\n                        title={restaurant.name}\n                    />\n                ))}\n            </GoogleMap>\n        </LoadScript>\n    );\n};\n\nexport default MapView;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,EAAEC,MAAM,QAAQ,wBAAwB;AACtE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC;IAAEY,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAE,CAAC,CAAC;EAC9D,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,6BAA6B;EACxD,MAAMC,OAAO,GAAGH,OAAO,CAACC,GAAG,CAACG,iBAAiB,IAAI,2BAA2B;EAE5EpB,SAAS,CAAC,MAAM;IACZ,IAAIS,WAAW,CAACY,MAAM,GAAG,CAAC,EAAE;MACxB,MAAMC,MAAM,GAAGC,SAAS,CAACC,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,EAAE,CAAC,CAAC,GAAGH,SAAS,CAACF,MAAM;MACtE,MAAMM,MAAM,GAAGC,UAAU,CAACJ,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,EAAE,CAAC,CAAC,GAAGE,UAAU,CAACP,MAAM;MACxET,YAAY,CAAC;QAAEC,GAAG,EAAES,MAAM;QAAER,GAAG,EAAEa;MAAO,CAAC,CAAC;IAC9C;EACJ,CAAC,EAAE,CAAClB,WAAW,CAAC,CAAC;EAEjB,MAAMoB,iBAAiB,GAAG;IACtBC,MAAM,EAAE,OAAO;IACfC,KAAK,EAAE;EACX,CAAC;EAED,oBACIxB,OAAA,CAACJ,UAAU;IAAC6B,gBAAgB,EAAEjB,MAAO;IAAAkB,QAAA,eACjC1B,OAAA,CAACL,SAAS;MACN2B,iBAAiB,EAAEA,iBAAkB;MACrCK,MAAM,EAAEvB,SAAU;MAClBwB,IAAI,EAAE,EAAG;MAAAF,QAAA,EAERxB,WAAW,CAAC2B,GAAG,CAAEC,UAAU,iBACxB9B,OAAA,CAACH,MAAM;QAEHkC,QAAQ,EAAE;UACNzB,GAAG,EAAEwB,UAAU,CAACE,QAAQ,CAAC1B,GAAG;UAC5BC,GAAG,EAAEuB,UAAU,CAACE,QAAQ,CAACzB;QAC7B,CAAE;QACF0B,KAAK,EAAEH,UAAU,CAACI;MAAK,GALlBJ,UAAU,CAACK,GAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMtB,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAErB,CAAC;AAACpC,EAAA,CAtCIF,OAAO;AAAAuC,EAAA,GAAPvC,OAAO;AAwCb,eAAeA,OAAO;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}